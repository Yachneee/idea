<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kfm.schoolBatis.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="User">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="CHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="lastLoginTime" column="last_login_time" jdbcType="TIMESTAMP"/>
        <collection property="roles" ofType="role">
            <result property="rid" column="rid" jdbcType="INTEGER"/>
            <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
            <result property="roleDesc" column="role_desc" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>
    <resultMap id="BaseResultMap1" type="User">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="CHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="lastLoginTime" column="last_login_time" jdbcType="TIMESTAMP"/>
        <collection property="roles" ofType="role" column="id"
                    select="com.kfm.schoolBatis.mapper.RoleMapper.selectByUid"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,username,password,
        email,phone,sex,
        avatar,last_login_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByRid" resultType="User" parameterType="int">
        select u.*
        from user u
                 join role_user ru on u.id = ru.user_id and ru.role_id = #{rid}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select u.*, r.*
        from user u
                 join role_user ru on ru.user_id = u.id
                 join role r on r.rid = ru.role_id
    </select>
    <select id="selectAll1" resultMap="BaseResultMap1">
        select
        <include refid="Base_Column_List"/>
        from user
    </select>
    <select id="selectOne" resultMap="BaseResultMap" parameterType="user">
        select u.*, r.* from user u
        join role_user ru on ru.user_id = u.id
        join role r on r.rid = ru.role_id
        <where>
            <if test="username != null">
                and u.username=#{username}
            </if>
            <if test="password != null">
                and u.password=#{password}
            </if>
        </where>
    </select>
    <select id="selectOne1" resultMap="BaseResultMap1" parameterType="user">
        select
        <include refid="Base_Column_List"/>
        from user u
        <where>
            <if test="username != null">
                and u.username=#{username}
            </if>
            <if test="password != null">
                and u.password=#{password}
            </if>
        </where>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="User" useGeneratedKeys="true">
        insert into user
        ( id, username, password
        , email, phone, sex
        , avatar)
        values ( #{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}
               , #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}
               , #{avatar,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="User" useGeneratedKeys="true">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="username != null">username,</if>
            <if test="password != null">password,</if>
            <if test="email != null">email,</if>
            <if test="phone != null">phone,</if>
            <if test="sex != null">sex,</if>
            <if test="avatar != null">avatar,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=INTEGER},</if>
            <if test="username != null">#{username,jdbcType=VARCHAR},</if>
            <if test="password != null">#{password,jdbcType=VARCHAR},</if>
            <if test="email != null">#{email,jdbcType=VARCHAR},</if>
            <if test="phone != null">#{phone,jdbcType=VARCHAR},</if>
            <if test="sex != null">#{sex,jdbcType=CHAR},</if>
            <if test="avatar != null">#{avatar,jdbcType=VARCHAR},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=CHAR},
            </if>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="User">
        update user
        set username = #{username,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            email    = #{email,jdbcType=VARCHAR},
            phone    = #{phone,jdbcType=VARCHAR},
            sex      = #{sex,jdbcType=CHAR},
            avatar   = #{avatar,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateLastLoginTime" parameterType="user">
        update user
        set last_login_time=#{lastLoginTime,jdbcType=TIMESTAMP}
        where id=#{id,jdbcType=INTEGER}
    </update>
</mapper>
